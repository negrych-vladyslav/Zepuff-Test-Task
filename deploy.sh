#!/bin/bash

# ==========================================================
# SCRIPTS DEPLOY.SH - –Ñ–î–ò–ù–ê –¢–û–ß–ö–ê –í–•–û–î–£ –î–õ–Ø CI/CD
#
# –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: bash deploy.sh <dev|main> <—à–ª—è—Ö_–¥–æ_vault_pass.txt>
#
# –Ø–ö –ë–ï–ó–ü–ï–ß–ù–û –ü–ï–†–ï–î–ê–¢–ò –û–ë–õ–Ü–ö–û–í–Ü –î–ê–ù–Ü (–í–ê–ñ–õ–ò–í–û):
# –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –∑–º—ñ–Ω–Ω—É –æ—Ç–æ—á–µ–Ω–Ω—è –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º:
# export BASIC_AUTH_CREDENTIALS="admin:your_secret_password"
# ==========================================================

# 1. –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤
if [ -z "$1" ] || [ -z "$2" ]; then
    echo "–ü–æ–º–∏–ª–∫–∞: –ù–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ –≥—ñ–ª–∫—É —Ç–∞ —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É –∑ –ø–∞—Ä–æ–ª–µ–º Vault."
    echo "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: bash deploy.sh <dev|main> <—à–ª—è—Ö_–¥–æ_vault_pass.txt>"
    exit 1
fi

BRANCH="$1"
VAULT_PASS_FILE="$2"
ANSIBLE_INVENTORY="ansible/inventory"
ANSIBLE_PLAYBOOK="ansible/playbook.yml"
PROD_DOMAIN="prod.zepuff-test-task.pp.ua"
DEV_DOMAIN="dev.zepuff-test-task.pp.ua"

# –í–∏–∑–Ω–∞—á–∞—î–º–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ –¥–ª—è Ansible (main -> prod, dev -> dev)
if [ "$BRANCH" == "main" ]; then
    TARGET_ENV="prod"
else
    TARGET_ENV="dev"
fi

# 2. –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤ —Ç–∞ –ö–†–ò–¢–ò–ß–ù–ê –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ Basic Auth –¥–ª—è Prod
AUTH_HEADER=""
if [ "$TARGET_ENV" == "prod" ]; then
    if [ -z "$BASIC_AUTH_CREDENTIALS" ]; then
        echo "=========================================================="
        echo "‚ùå –ü–û–ú–ò–õ–ö–ê: –î–ª—è 'prod' –Ω–µ–æ–±—Ö—ñ–¥–Ω–∞ –∑–º—ñ–Ω–Ω–∞ BASIC_AUTH_CREDENTIALS."
        echo "=========================================================="
        exit 1
    else
        AUTH_HEADER="-u $BASIC_AUTH_CREDENTIALS"
    fi
fi

# ==========================================================
# –§–£–ù–ö–¶–Ü–Ø –ü–ï–†–ï–í–Ü–†–ö–ò (HEALTH CHECK)
# ==========================================================

# –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä—è—î: 
# 1. HTTPS –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å
# 2. –í–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç–∞ (—è–∫—â–æ prod)
# 3. –£—Å–ø—ñ—à–Ω–∏–π Basic Auth (—è–∫—â–æ prod)
run_final_check() {
    local domain=$1
    local auth_data=$BASIC_AUTH_CREDENTIALS
    local target_env=$3
    
    # –ü—Ä–∞–ø–æ—Ä–∏ –¥–ª—è curl
    local curl_flags="-s --fail -o /dev/null"
    
    if [ "$target_env" == "dev" ]; then
        # –î–æ–∑–≤–æ–ª—è—î–º–æ –Ω–µ–≤–∞–ª—ñ–¥–Ω—ñ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç–∏ –¥–ª—è Dev (-k)
        curl_flags="-s -k --fail -o /dev/null"
    fi

    echo "üåê –ó–∞–ø—É—Å–∫ —Ñ—ñ–Ω–∞–ª—å–Ω–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ $domain (–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: curl --fail)..."
    
    # –í–∏–∫–æ–Ω—É—î–º–æ –∫–æ–º–∞–Ω–¥—É, —è–∫–∞ —É—Å–ø—ñ—à–Ω–æ –ø—Ä–∞—Ü—é–≤–∞–ª–∞ –ª–æ–∫–∞–ª—å–Ω–æ
    curl $curl_flags -u "$auth_data" "https://$domain"

    CURL_EXIT_CODE=$?

    if [ $CURL_EXIT_CODE -eq 0 ]; then
        echo "‚úÖ $domain: –£—Å–ø—ñ—Ö (–ö–æ–¥ –≤–∏—Ö–æ–¥—É 0). –£—Å—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ (HTTPS, –°–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç, Auth) –ø—Ä–æ–π–¥–µ–Ω—ñ."
        return 0
    else
        # –û–±—Ä–æ–±–∫–∞ —Ç–∏–ø–æ–≤–∏—Ö –ø–æ–º–∏–ª–æ–∫
        if [ "$target_env" == "prod" ] && [ "$CURL_EXIT_CODE" -eq 6 ]; then
             echo "‚ùå $domain: –ü–æ–º–∏–ª–∫–∞ 6 (Could not resolve host). –ü—Ä–æ–±–ª–µ–º–∞ –∑ DNS –∞–±–æ –º–µ—Ä–µ–∂–µ—é."
        elif [ "$target_env" == "prod" ] && [ "$CURL_EXIT_CODE" -eq 60 ]; then
             echo "‚ùå $domain: –ü–æ–º–∏–ª–∫–∞ 60 (SSL Certificate Problem). –°–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç –ù–ï –¥—ñ–π—Å–Ω–∏–π."
        elif [ "$target_env" == "prod" ]; then
             echo "‚ùå $domain: –ü—Ä–æ–≤–∞–ª –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ (–ö–æ–¥ $CURL_EXIT_CODE). –ú–æ–∂–ª–∏–≤–∞ –ø–æ–º–∏–ª–∫–∞ 401 (Basic Auth) –∞–±–æ 5xx."
        else
             echo "‚ùå $domain: –ü—Ä–æ–≤–∞–ª –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ (–ö–æ–¥ $CURL_EXIT_CODE)."
        fi
        return 1
    fi
}

# ==========================================================
# –û–°–ù–û–í–ù–ê –õ–û–ì–Ü–ö–ê –î–ï–ü–õ–û–Æ
# ==========================================================

echo "=========================================================="
echo "üöÄ –ó–∞–ø—É—Å–∫ –¥–µ–ø–ª–æ—é –¥–ª—è –≥—ñ–ª–∫–∏: $BRANCH (–°–µ—Ä–µ–¥–æ–≤–∏—â–µ: $TARGET_ENV)"
echo "=========================================================="

# 3. –í–∏–∫–æ–Ω–∞–Ω–Ω—è Ansible Playbook
ansible-playbook -i "$ANSIBLE_INVENTORY" "$ANSIBLE_PLAYBOOK" \
    -e branch=$TARGET_ENV \
    --vault-password-file "$VAULT_PASS_FILE"

# 4. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –≤–∏–∫–æ–Ω–∞–Ω–Ω—è Ansible
if [ $? -ne 0 ]; then
    echo "=========================================================="
    echo "‚ùå –î–µ–ø–ª–æ–π –¥–ª—è –≥—ñ–ª–∫–∏ $BRANCH –∑–∞–≤–µ—Ä—à–∏–≤—Å—è –∑ –ø–æ–º–∏–ª–∫–æ—é Ansible."
    echo "=========================================================="
    exit 1
fi

echo "=========================================================="
echo "‚úÖ Ansible –∑–∞–≤–µ—Ä—à–∏–≤ —Ä–æ–±–æ—Ç—É. –ó–∞–ø—É—Å–∫ Health Check..."
echo "=========================================================="

# 5. –í–∏–∫–æ–Ω–∞–Ω–Ω—è —Ñ—ñ–Ω–∞–ª—å–Ω–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
if [ "$TARGET_ENV" == "prod" ]; then
    TARGET_DOMAIN="$PROD_DOMAIN"
else
    TARGET_DOMAIN="$DEV_DOMAIN"
fi

# –í–∏–∫–æ–Ω—É—î–º–æ –ª–∏—à–µ –æ–¥–Ω—É –ø–µ—Ä–µ–≤—ñ—Ä–∫—É
TOTAL_CHECKS=1
if run_final_check "$TARGET_DOMAIN" "$AUTH_HEADER" "$TARGET_ENV"; then
    echo "=========================================================="
    echo "üéâ –£—Å–ø—ñ—Ö! –î–µ–ø–ª–æ–π $BRANCH —Ç–∞ –≤—Å—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ñ."
    echo "=========================================================="
    exit 0
else
    echo "=========================================================="
    echo "üî• –ü–æ–º–∏–ª–∫–∞! Health Check –Ω–µ –ø—Ä–æ–π—à–æ–≤. CI/CD –±—É–¥–µ –∑—É–ø–∏–Ω–µ–Ω–æ."
    echo "=========================================================="
    exit 1
fi
